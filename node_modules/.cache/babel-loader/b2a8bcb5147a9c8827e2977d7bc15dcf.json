{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\calculadora-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [screenValue, setScreenValue] = useState('');\n  const [result, setResult] = useState(0);\n  const [acumulator, setAcumulator] = useState(0);\n  const [operated, setOperated] = useState(false); // components\n\n  const Screen = (val, res) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styleScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: styleScreenOp,\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styleScreenRes,\n        children: res\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  };\n\n  const btn = (label, onClick) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styleBtn,\n      onClick: onClick,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }; // functions\n\n\n  const addDigitToScreen = d => {\n    if ((d == '+' || d == '-' || d == '*' || d == '/') && operated) {\n      setOperated(false);\n      setScreenValue(result + d);\n      return;\n    }\n\n    if (operated) {\n      setOperated(false);\n      setScreenValue(d);\n      return;\n    }\n\n    const typedScreenValue = screenValue + d;\n    setScreenValue(typedScreenValue);\n  };\n\n  const clearMemory = () => {\n    setOperated(false);\n    setScreenValue('');\n    setResult(0);\n    setAcumulator(0);\n  };\n\n  const operation = op => {\n    if (op == 'bs') {\n      let vScr = screenValue;\n      vScr = vScr.substring;\n    }\n  }; // styles\n\n\n  const styleScreen = {\n    display: 'flex',\n    paddingLeft: 20,\n    paddingRight: 20,\n    justifyContent: 'center',\n    alignItens: 'flex-start',\n    flexDirection: 'colum',\n    window: 260,\n    backgroundColor: '#444'\n  };\n  const styleScreenOp = {\n    fontSize: 25,\n    color: '#fff',\n    height: 20\n  };\n  const styleScreenRes = {\n    fontSize: 50,\n    color: '#fff',\n    height: 20\n  };\n  const styleBtn = {\n    fontSize: 30,\n    height: 75,\n    width: 75,\n    padding: 20,\n    backgroundColor: '#000',\n    color: '#fff',\n    borderColor: '#000',\n    textAlign: 'center',\n    outline: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(App, \"4hMRQjVHCtKr9BlWCrF23NnQ7y8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","screenValue","setScreenValue","result","setResult","acumulator","setAcumulator","operated","setOperated","Screen","val","res","styleScreen","styleScreenOp","styleScreenRes","btn","label","onClick","styleBtn","addDigitToScreen","d","typedScreenValue","clearMemory","operation","op","vScr","substring","display","paddingLeft","paddingRight","justifyContent","alignItens","flexDirection","window","backgroundColor","fontSize","color","height","width","padding","borderColor","textAlign","outline"],"sources":["C:/Users/julia/OneDrive/Área de Trabalho/calculadora-react/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nexport default function App() {\n  const [screenValue, setScreenValue] = useState('')\n  const [result, setResult] = useState(0)\n  const [acumulator, setAcumulator] = useState(0)\n  const [operated, setOperated] = useState(false)\n\n  // components\n  const Screen = ( val, res ) => {\n    return(\n      <div style={styleScreen}>\n        <span style={styleScreenOp}>{val}</span>\n        <span style={styleScreenRes}>{res}</span>\n      </div>\n    );\n  }\n\n  const btn = ( label, onClick ) => {\n    return(\n      <button style={styleBtn} onClick={onClick}>{label}</button>\n    );\n  }\n\n  // functions\n  const addDigitToScreen = ( d ) => {\n    if ( (d == '+' || d == '-' || d == '*' || d == '/') && operated ) {\n      setOperated(false);\n      setScreenValue(result + d);\n      return\n    }\n    if ( operated ) {\n      setOperated(false);\n      setScreenValue(d);\n      return\n    }\n    const typedScreenValue = screenValue + d\n    setScreenValue(typedScreenValue);\n  }\n\n  const clearMemory = (  ) => {\n    setOperated(false)\n    setScreenValue('')\n    setResult(0)\n    setAcumulator(0)\n  }\n\n  const operation = ( op ) => {\n    if (op == 'bs') {\n      let vScr = screenValue\n      vScr = vScr.substring\n    }\n  }\n\n  // styles\n  const styleScreen = {\n    display: 'flex',\n    paddingLeft: 20,\n    paddingRight: 20,\n    justifyContent: 'center',\n    alignItens: 'flex-start',\n    flexDirection: 'colum',\n    window: 260,\n    backgroundColor: '#444'\n  }\n\n  const styleScreenOp = {\n    fontSize: 25,\n    color: '#fff',\n    height: 20\n  }\n\n  const styleScreenRes = {\n    fontSize: 50,\n    color: '#fff',\n    height: 20\n  }\n\n  const styleBtn = {\n    fontSize: 30,\n    height: 75,\n    width: 75,\n    padding: 20,\n    backgroundColor: '#000',\n    color: '#fff',\n    borderColor: '#000',\n    textAlign: 'center',\n    outline: 'none'\n  }\n\n  return(\n    <>\n    \n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}